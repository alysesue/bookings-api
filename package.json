{
	"name": "bookingsg",
	"version": "0.0.1",
	"main": "index.js",
	"scripts": {
		"use:local-env": "node node_modules/cpy-cli/cli ./params/secrets/local.env ./ --rename=.env",
		"use:mylocal-env": "cp ./params/secrets/mylocal.env ./.env ",
		"lint": "NODE_OPTIONS='--max-old-space-size=4096' tslint -p ./tsconfig.json -c ./tslint.json './src/**/*.ts'",
		"lint-fix": "NODE_OPTIONS='--max-old-space-size=4096' tslint --fix  -p ./tsconfig.json -c ./tslint.json './src/**/*.ts'",
		"lint-fix:test": "NODE_OPTIONS='--max-old-space-size=4096' tslint --fix -p ./tsconfig.json -c ./tslint.json './__tests__/**/*.ts'",
		"test": "npm run fixLF && rm -f .env && ./node_modules/mol-lib-config/shared-scripts/jest-test-unit-integration.sh",
		"atest": "npm run fixLF && rm -f .env && node --expose-gc ./node_modules/jest/bin/jest --maxWorkers=2",
		"test:cov": "npm run fixLF && rm -f .env && node --expose-gc ./node_modules/jest/bin/jest --maxWorkers=2 --collect-coverage",
		"test:fast": "npm run fixLF && rm -f .env && node --expose-gc ./node_modules/jest/bin/jest --maxWorkers=4 --collect-coverage",
		"test:functional": "npm run fixLF && ./node_modules/mol-lib-config/shared-scripts/jest-test.sh  --runInBand --config __tests__/jest.config.functional.js",
		"atest:functional": "npm run fixLF && node --expose-gc ./node_modules/jest/bin/jest --runInBand --config __tests__/jest.config.functional.js",
		"test:load": "./scripts/k6-test-load.sh",
		"build": "npm run fixLF && ./scripts/build.sh",
		"build:skip-migrations": "npm run fixLF && ./scripts/build.sh production skipMigrations",
		"swagger": "./node_modules/.bin/tsoa spec",
		"sync-env": "npm run fixLF && export SERVICE_NAME=bookingsg && ./node_modules/mol-lib-config/shared-scripts/aws/aws-sm-sync-env.sh",
		"sync-local": "node node_modules/cpy-cli/cli ./params/secrets/local.env ./ --rename=.env",
		"start": "npm run use:mylocal-env && docker-compose up -d --build",
		"start:functional": "npm run use:local-env && docker-compose up -d --build",
		"start:fresh": "docker-compose down -v && npm run use:mylocal-env && docker-compose up -d --build --force-recreate",
		"start:functional-fresh": "docker-compose down -v && docker-compose up -d --build --force-recreate",
		"seed": "npm run fixLF && ts-node __tests__/localSeeds/index.ts",
		"cleanup": "docker-compose down -v --rmi all --remove-orphans",
		"cleanup:light": "docker-compose down -v --rmi local --remove-orphan",
		"logs": "docker logs -f bookingsg",
		"stop": "docker-compose stop",
		"lint-staged": "lint-staged",
		"watcher-install": "npm install",
		"watcher-build": "npm run build && npm run watcher-env",
		"watcher-env": "cp .env ./dist/.env",
		"watcher-run": "(npm run watcher-env; cd ./dist; forever --minUptime 1000ms --spinSleepTime 3000ms -c \"node --trace-warnings --inspect=0.0.0.0:6000\" index.js)",
		"params:new": "npm run fixLF && ./node_modules/mol-bamboo-scripts/scripts/generator/service-params-new-env.sh",
		"fixLF": "node ./src/fixLF.js",
		"schema:sync": "export LOCALHOST=true && ts-node ./node_modules/typeorm/cli schema:sync -f ./src/core/ormconfig.ts",
		"migration:generate": "export LOCALHOST=true && ts-node ./node_modules/typeorm/cli migration:generate -f ./src/core/ormconfig.ts -n",
		"migration": "ts-node node_modules/typeorm/cli migration:run -f ./src/core/ormconfig.ts",
		"migration:local": "export LOCALHOST=true && npm run migration"
	},
	"husky": {
		"hooks": {
			"pre-commit": "npm run lint --",
			"pre-push": "npm run build:skip-migrations && npm run test:cov && npm run swagger"
		}
	},
	"lint-staged": {
		"src/**/*.ts": [
			"npm run lint --"
		]
	},
	"watch": {
		"watcher-build": {
			"patterns": [
				"node_modules",
				"src"
			],
			"ignore": [
				"**/*.spec.ts",
				"src/routes.ts"
			],
			"extensions": "*",
			"delay": 1000,
			"verbose": true
		},
		"watcher-install": {
			"patterns": [
				"package.json",
				"package-lock.json"
			],
			"extensions": "*",
			"delay": 1000,
			"runOnChangeOnly": true,
			"verbose": true
		},
		"watcher-run": {
			"patterns": [
				"dist",
				"params"
			],
			"ignore": [
				"package.json",
				"package-lock.json"
			],
			"extensions": "*",
			"delay": 500,
			"runOnChangeOnly": true,
			"verbose": true
		},
		"watcher-env": {
			"patterns": [
				".env"
			],
			"extensions": "*",
			"delay": 100,
			"runOnChangeOnly": false,
			"verbose": true
		}
	},
	"dependencies": {
		"@js-joda/core": "^3.2.0",
		"axios": "^0.21.1",
		"crypto-js": "^4.0.0",
		"csv-parse": "^4.10.1",
		"glob": "^7.1.6",
		"googleapis": "^49.0.0",
		"hashids": "^2.2.8",
		"koa-helmet": "^6.0.0",
		"koa-no-cache": "^2.0.0",
		"koa-proxy": "^1.0.0-alpha.3",
		"mol-lib-api-contract": "git+https://mol-tech-support:MzM0MzQyNDg5NDMwOpTeYhhhv5A3YbEacxIksAUgeoLu@bitbucket.ship.gov.sg/scm/push/mol-lib-api-contract.git#semver:~7.2.5",
		"mol-lib-common": "git+https://mol-tech-support:MzM0MzQyNDg5NDMwOpTeYhhhv5A3YbEacxIksAUgeoLu@bitbucket.ship.gov.sg/scm/push/mol-lib-common.git#semver:~4.1.17",
		"moment": "^2.25.3",
		"node-forge": "^0.10.0",
		"pg": "^8.5.1",
		"pg-query-stream": "^4.0.0",
		"prettier": "^2.1.1",
		"react-popper": "^2.2.3",
		"reflect-metadata": "^0.1.13",
		"set-cookie-parser": "^2.4.6",
		"swagger2": "^2.0.0",
		"swagger2-koa": "^2.0.0",
		"typeorm": "^0.2.31",
		"typescript-ioc": "^3.2.2",
		"uuid": "^8.3.2"
	},
	"devDependencies": {
		"@koa/cors": "^2.2.3",
		"@popperjs/core": "^2.4.4",
		"@types/faker": "^4.1.11",
		"@types/jest": "25.2.1",
		"@types/k6": "^0.25.1",
		"@types/lodash": "^4.14.150",
		"@types/minimist": "^1.2.0",
		"@types/node": "^13.13.10",
		"@types/pg": "^7.14.7",
		"chalk": "^4.0.0",
		"circular-dependency-plugin": "^5.2.0",
		"copy-webpack-plugin": "^6.0.1",
		"cpy-cli": "^3.1.1",
		"faker": "^4.1.0",
		"file-loader": "^6.0.0",
		"husky": "4.2.5",
		"jest": "^25.5.4",
		"jest-bamboo-formatter": "^1.0.1",
		"jest-cli": "^25.4.0",
		"lint-staged": "^10.1.7",
		"lodash": "^4.17.19",
		"minimist": "^1.2.5",
		"mol-bamboo-scripts": "git+https://mol-tech-support:MzM0MzQyNDg5NDMwOpTeYhhhv5A3YbEacxIksAUgeoLu@bitbucket.ship.gov.sg/scm/push/mol-bamboo-scripts.git#semver:~1.4.2",
		"mol-lib-config": "git+https://mol-tech-support:MzM0MzQyNDg5NDMwOpTeYhhhv5A3YbEacxIksAUgeoLu@bitbucket.ship.gov.sg/scm/push/mol-lib-config.git#semver:~5.2.2",
		"ts-jest": "^25.5.1",
		"ts-loader": "^7.0.5",
		"ts-node": "^8.9.1",
		"tslint": "^6.1.3",
		"tslint-config-prettier": "^1.18.0",
		"tslint-config-security": "^1.16.0",
		"tslint-no-circular-imports": "^0.7.0",
		"tslint-plugin-prettier": "^2.3.0",
		"tslint-sonarts": "^1.9.0",
		"typescript": "^3.9.9"
	}
}
